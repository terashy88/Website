dinamicko pisanje

1. Možeš pristupiti vrijednosti propertija tako da napraviš object.property ili object['property']
2. Dinamički dodati property name objectu tako da napraviš object['property'] = value ili { ['property']: value } 

HARDCODE
@Transaction()
  async fetchAndUpdateCode(
    locationId: string,
    @TransactionManager() manager?: EntityManager,
  ): Promise<number> {
    const result = await manager
      .createQueryBuilder()
      .update(LocationOrderOfferNumber)
      .set({
        orderNumber: () => `"orderNumber" + 1`,                    ->HARD
      })
      .where(`location = ${locationId}`)
      .output([`orderNumber`])                                                     ->HARD
      .execute();
    if (result.affected === 0) {
      const data = await this.createLocationOrderNumber(locationId, 1, 0)
      return data.orderNumber;
    }
    return result.raw[0].orderNumber;                                              ->HARD
  }

DYNAMIC

@Transaction()
  async fetchAndUpdateCode(
    locationId: string,
    locationNumberType: LocationNumberTypeEnum,
    @TransactionManager() manager?: EntityManager,
  ): Promise<number> {
    const result = await manager
      .createQueryBuilder()
      .update(LocationOrderOfferNumber)
      .set({
        [`${locationNumberType}`]: () => `"${locationNumberType}" + 1`,        -> DYNAMIC
      })
      .where(`location = ${locationId}`)
      .output([`${locationNumberType}`])                                       -> DYNAMIC
      .execute();
    if (result.affected === 0) {
      const data = await (locationNumberType ===
      LocationNumberTypeEnum.ORDER_NUMBER
        ? this.createLocationOrderNumber(locationId, 1, 0)
        : this.createLocationOrderNumber(locationId, 0, 1));
      return data[locationNumberType];
    }
    return result.raw[0][locationNumberType];                           ->DYNAMIC
  }

