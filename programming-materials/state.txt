STATE
-u componenti

class State extends Component {
state={
      score:0,
      gameOver:false
    }
To je skraÄ‡eno od:
constructor(props) {
  super(props);
  this.state = {  
      score:0,
      gameOver:false   
  };
  this.singleKill = this.singleKill.bind(this);
}
-------------------------------------------------------------
Ako MENJAMO state -> setState

-mjenjamo score
singleKill = () => {
    this.setState({
      score: this.state.score + 1
    });
  }
Koristimo arrow funkciju jer bi inace gore u constructor
trebali dodat:
this.singleKill = this.singleKill.bind(this);

-------------------------------------------------------------
Callback
                             

incrementScore(oldState) {          /* setStete(callback) */
    return { score: oldState.score + 1}
 } 
 
 tripleKill= () => {
   this.setState(this.incrementScore);  /* bez callback-oldstate bi se povecavalo samo za 1
                                         zadnji red bi se gledao, a ovako za 3 */
   this.setState(this.incrementScore);
   this.setState(this.incrementScore);
 }

  render(){
    return(
      <div>
        <h1>state-constructor-super </h1>
        <h2>your score is: {this.state.score} </h2>
        <button onClick={this.singleKill}>click me</button>
        <button onClick={this.tripleKill}>triple click me</button>
        <h1></h1>
      </div>
    )
  }
    
  }


export default State;


}
 ALI umjesto ovog mozemo samo napisat state={} babel nesto*/


