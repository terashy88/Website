MAP

state={
nums: [1,2,2,3,4,5,5]}

render() {
let nums=this.state.nums.map( (n, index) => <NumberItem key={index} value={n} />)
return(
     <ul>nums</ul>   )
}
---------------------------------------------------------
example 2.

let hobbies={['piano','singing','dancing','acting','rock','movies','bljat']}

Ispisujemo ih u <li></li> npr.:

<p>hobbies are(loop-map):
      <ul>
        {hobbies.map((h, index) => <li key={index}>{h}</li>)}           {/* looping kroz hobije a index da se ne ponavljaju*/}
      </ul>
</p> 
---------------------------------------------------------
Example 3.

let contacts = [{
        id:1,
	name:'mihael',
	age: '28'
},{     id:2,
        name:'mini',
	age: '8'
},{	id:3,
        name:'mega',
	age: '30'
},
]

Listamo u nove komponente
<ul>
        {this.props.contacts.map((contact) => {
         return <SomeComponent contact={contact} key={contact.id} />)}           
 </ul>
--------------------------------------------------------------------------
4.example
- App.js
static defaultProps = {
    dogs: [
      {
        name: "Whiskey",
        age: 5,
        src: whiskey,
        facts: [
          "Whiskey loves eating popcorn.",
          "Whiskey is a terrible guard dog.",
          "Whiskey wants to cuddle with you!"
        ]
      },
      {
        name: "Hazel",
        age: 3,
        src: hazel,
        facts: [
          "Hazel has soooo much energy!",
          "Hazel is highly intelligent.",
          "Hazel loves people more than dogs."
        ]
      },
render() {
    return (
      <div>
        <Navbar dogs={this.props.dogs} />
        <div className='container'>
          <Routes dogs={this.props.dogs} />
        </div>
      </div>
    );
------------------      
SADA U Doglist.js
<div className="row">
	{this.props.dogs.map(d => (
	<div className="col-4 text-center" key={d.name}>
	   <img srce={d.src} alt={d.name} />
           <h3>{d.name}</h3>
        </div>
))}
</div>
------------------
Dogdetails.js
render() {
let {dog}=this.props;
  return(
    <ul className="list-group list-group-flush">
	{dog.facts.map(fact,i) => (
	<li className='list-gruop-item'>{fact}</li>
)}
    </ul>
-----------------
NAVBAR LISTA PO PSIMA
import React, { Component } from "react";
import { NavLink, Link } from "react-router-dom";

class Navbar extends Component {
  render() {
    const dogLinks = this.props.dogs.map(dog => (
      <li className='nav-item' key={dog.name}>
        <NavLink exact to={`/dogs/${dog.name}`} className='nav-link'>
          {dog.name}
        </NavLink>
      </li>
    ));
    return (
      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>
        <Link className='navbar-brand' to='/dogs'>
          Dog App
        </Link>

        <button
          className='navbar-toggler'
          type='button'
          data-toggle='collapse'
          data-target='#navbarNav'
          aria-controls='navbarNav'
          aria-expanded='false'
          aria-label='Toggle navigation'
        >
          <span className='navbar-toggler-icon' />
        </button>
        <div className='collapse navbar-collapse' id='navbarNav'>
          <ul className='navbar-nav'>
            <li className='nav-item'>
              <NavLink exact to='/dogs' className='nav-link'>
                Home
              </NavLink>
            </li>
            {dogLinks}  --> tu se ubacuje nas <li> s map od gore
          </ul>
        </div>
      </nav>
    );
  }
}
export default Navbar;
