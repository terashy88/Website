 ROUTER

1.npm install react-router-dom

2.u index.js:
import {BrowserRouter} from 'react-router-dom'

3.wrapp <App />
<BrowserRouter>
<App />
<BrowserRouter

4.u App.js
import {Route, Switch, NavLink, Link, Redirect} from 'react-router-dom'
import Dog from ./Dog;

-ROUTE- renders out a component based on the url
      - relouda page 
      - ako napisemo gore u url, onda se mjenja komponenta (u samoj aplikaciji nema button il link da kliknemo pa se mjenja(za to trebamo link)
      - <Route exact path='/about' component={About}/> -> ako napisemo .../about url, tada cemo dobit komponentu About

- LINK - mjenja url s obzirom na to="" prop
       - ne relouda page, route reload 
       - <Link to="/Home">click me</Link> -> kada kliknemo na click me link, gore se url mjenja u .../Home
       - ako smo s Route slozili da url .../Home rendera komponentu <Home/> tada cemo na klik linka dobiti komponentu Home

- ROUTE + LINK - na klik buttona mjenja se i url i rendera komonenta
 <Route exact path='/about' component={About}/> 
 <Link to="/about"> <button> click me <(button> </Link>

- SWITCH - renders first matching zato jer ako otvorim http://localhost:3000/dog pokazuje se i dog i about
- EXACT - renders 1 component, first exactly match url

- NAVLINK - have active class
          - goes with exact

-----------------------------------------------------------------------------
 Link
-Link koristimo umjesto <a href="https://www.w3schools.com">Visit W3Schools</a>
                        <Link to="/">Visit W3Schools</Link>
      - ne relouda page, route reload
- ako smo sada npr. na example.com/posts(dakle u App.js imamo rutu za posts i sama smo u Posts.js) i zelimo da svaki puta kad kliknemo dodje na example.com/new:
                        <Link to="/new""></Link>
- ako smo sada npr. na example.com/posts i zelimo da svaki puta kad kliknemo dodje na example.com/posts/new:
                        <Link to={props.match.url + '/new'}>  
-ako smo na npr na komponenti ecample.com/nesto tada <Link to={props.match.url + '/new'}> vodi na ecample.com/nesto/new                   
------------------------------------------------------------------------------------------
 Navlink 
- kao link ali omogućuje da imamo activeClassName kojega onda u cssu slozimo

<div className="App">
      <nav className="App-nav"> 
        <NavLink exact activeClassName="active-link" to="/dog">Dog</NavLink>
        <NavLink exact activeClassName="active-link" to="/">About</NavLink>
        <NavLink exact activeClassName="active-link" to="/cat">cat</NavLink>
        <NavLink exact activeClassName="active-link" to ="/haters">Haters</NavLink>
      </nav>
    </div>
export default App;
--------------------------------------------------------------
 Switch + Route
- Switch load only 1 route, prvi koji se pokalapa s Route setup
<Switch>       
    	<Route exact path='/' component={About}/>
        <Route exact path='/dog' component={Dog}/>
        <Route exact path='/:id' component={Cat}/>   uvijek kad /id pokazje Cat
        <Route exact path='/haters' component={Haters}/>
        <Route exact path='/soda' component={Soda}/>
        <Route exact path='/chips' component={Chips}/>
</Switch>  
-----------------------------------------------------------
 Nested Routes
-mi smo u npr. Posts.js
<Route path={props.match.url + '/new' exact component={New}}>

------------------------------------------------------------------
 Redirect user
- mora biti u switch
<Switch>       
    	<Redirect from="/" to="/posts"/>
</Switch>  
-----------------------------------------------------------------
 404
- ako dođemo na rutu koja ne postoji ispisujemo Not Found
- uvijek dolazi zadnje u Switch poretku
<Switch>       
    	<Redirect render={() => <h1>Not Found</h1>}/>
</Switch>  
----------------------------------------------------------------
 Back/ Next page

PR1
- landing page

<Router>
  <div>
    <Route exact path="/" component={Page1}/>
    <Route path="/Page2" component={Page2}/>
    <Route path="/Page3" component={Page3}/>
  </div>
</Router>

-page1

import React, {Component} from 'react';
import {Button} from 'react-bootstrap';
import { withRouter } from 'react-router-dom' - da radi u cijelom projektuhistory.goBack

class Page1 extends Component {

  render() {
    return (
      <div>
        {/* some component code */}

        <div className="navigationButtonsLeft">
          <Button onClick={() => this.props.history.goBack()} bsStyle="success">&lt; Back</Button>
        </div>
        <div className="navigationButtonsRight">
          <Button onClick={this.goNext} bsStyle="success">Next &gt;</Button>
        </div>

      </div>
    );
  }


export default withRouter{Page1};
----------------------------------------------------------------------------

PR2
- landing page
<Router>
  <div>
    <Link to="/"><div className="routerStyle"><Glyphicon glyph="home" /></div></Link>
    <Route exact path="/" component={Page1}/>
    <Route path="/Page2" component={Page2}/>
    <Route path="/Page3" component={Page3}/>
  </div>
</Router>

- Page1
import { withRouter } from "react-router-dom";
import {Button} from 'react-bootstrap';
import { withRouter } from 'react-router-dom' - da radi u cijelom projektuhistory.goBack

class Page1 extends Component {
  constructor(props) {
    super(props);
    this.goBack = this.goBack.bind(this);
    this.goNext = this.goNext.bind(this);
  }


  goBack = () => { 
    this.props.history.goBack();
  
  }

  goNext = () => {
    this.props.history.push(/page2);
  }

  /*
   * Main render method of this class
   */
  render() {
    return (
      <div>
        {/* some component code */}

        <div className="navigationButtonsLeft">
          <Button onClick={this.goBack} bsStyle="success">&lt; Back</Button>
        </div>
        <div className="navigationButtonsRight">
          <Button onClick={this.goNext} bsStyle="success">Next &gt;</Button>
        </div>

      </div>
    );
  }


export default withRouter{Page1};
-------------------------------------------------
 PR3 REUSABLE GOBACK BUTTON

import { withRouter } from "react-router-dom";
import { withRouter } from "react-router-dom";

function BackButton () => {
  return (
    <div onClick={() => this.props.history.goBack()}>GO BACK</div>
  )
}
export default withRouter{BackButton};
---------------------------------------
example koji radi


import React from 'react';
import './App.scss';
import Dog from './components/dog'
import ContactForm from './components/ContactForm'
import Services from './components/Services'


import {
  BrowserRouter as Router,
  Switch,
  Route,
  Link
} from "react-router-dom";


function App() {
  return (
    <div className="App">
    <Router>
      <div>
        <ul>       
          <li>
            <Link to="/dog">Dog</Link>
          </li>
          <li>
            <Link to="/contactform">contact</Link>
          </li>
          <li>
            <Link to="/services">services</Link>
          </li>         
        </ul>
        <Switch>
          <Route exact path="/contactform">
            <ContactForm />
          </Route>
          <Route exact path="/dog">
            <Dog />
          </Route>
          <Route exact path="/services">
            <Services />
          </Route>
        </Switch>
      </div>
    </Router>
    </div>
  );
}

export default App;


