 EVENT/METHODS

- EVENTS: onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit
onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave
onMouseMove onMouseOut onMouseOver onMouseUp

- funckiju(switchName) ispod state napisemo(to je method), i onClick(this.switchName) ju koristi

ONCLICK

export class Footer extends Component {
  state = {
    persons: [{ name: "max" }, { name: "maximus" }, { name: "maximilan" }],
  };
  switchName = () => {
    console.log("was clicked");          -> OVA FUNKCIJA POSTAJE METHOD
  };

  render() {
    return (
      <div>
        <button onclick={this.switchName}>Switch name!</button>   ili ako funcija ima argument
        <button onclick={() => this.switchName()}>Switch name!</button> 
      </div>
    );
  }
}
----------------------------------------------------------------
 ONMOUSEENTER

class Events extends Component {
  dispenseWisdom() {
    let messages = [
      "A fool thinks himself to be wise, but a wise man knows himself to be a fool.",
      "Educating the mind without educating the heart is no education at all.",
      "Not everything that is faced can be changed, but nothing can be changed until it is faced."
    ];
    let rIndex = Math.floor(Math.random() * messages.length);
    alert(messages[rIndex]);
  }

  render() {
    return (
      <div className='WiseSquare' onMouseEnter={this.dispenseWisdom}>
        ðŸ˜ƒ
      </div>
    );
  }
}
-----------------------------------------------------------------------
 PASSING METHODS BERWWEN COMPONENTS
- npr. imamo switchName method u Person.js i zelimo ju u Info.js
- saljemo je iz Person.js -> Info.js kao PROPS!
- napravimo od methode u persons props(dodamo npr- props klik i saljemo ju!

Person.js
switchName = () => {
    console.log("was clicked");          -> OVA FUNKCIJA POSTAJE METHOD
  };

render() {
    return (
      <div>
        <person
 		name={this.state.name}
		age={this.state.age}
		klik={this.switchName}   -> smo smo method pretvorili u props
        />
      </div>
    );

Info.js
render() {
    return (
      <div>
        <button onclick={props.klik}>info name!</button> ili ako funkcija ima argument
        <button onclick={() => this.klik}>
      </div>
    );


