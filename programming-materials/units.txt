7) UNITS
 
  USE
- root elemet html{font-size:16px; default, mozemo stavit 62.5%;, da bude 1rem:10px;}
- font-size: rem;
- border, shadow:px;
- margin/padding: rem;
- width/height: %,vh,vw;
- top/bottom/left/right: %;
- columns: rows: %
- images/media files: %,vh,vw,vmin,vmax.(for responsive images we usually use width = 100% and height = auto.)

- px:         border, shadow, smaller details (not for fontSize, oldet browsers dont scale)
- rem/em:     fontSize, often padding/margin, buttons padding/margin
- %:          useful for defining layouts and widths,height columns, rows, images
- vh/vw:      used fot larger layouts     
  
  PX
- ignore user setting(ako user stavi na large nece se nis desit na stranici)

  REM/EM
- em/rem more dynamic site
- rem(root em)- paading, margin, font-suze
            - Relative to font-size of the root element
            - HTML {font-size: 62.5%; } /* Now `rem` is equivalent to `10px` */
            - default 16 bybrowser
            - margin, padding, font-size, (width,height,border,shadow-No)
            - position:fixed; -px
- em - Relative to the font-size of the element or closest parent...2em means 2 times the size of the current font... div-15, span u njemu 2em =30
     - em's are good for buttons, bc it allows us to use flexible spacing around the boxes accoring to font-size of the element. Ak label 12px, pa promjenimo u 15px padding ce se promjenit ako je u em
     - mostly recommend them for margin and padding because of the issues you might encounter with font sizes.
- .second{
   font-size: 12px;
   padding: 1em;                - now padding/margin is 12px(font-size of the element), but if we remove font-size from .second, and define .fist {font-size: 14px;}
   margin: 1em;                   then paddings gonna be 14px(closest parent)
}

- To reset font size for all elements, you can use the universal selector:

* {font-size: 100%; }

  VIEWPORT
- vh,vw
- nema veze koji position: ; (kod postotka ima)
- in case you don't want to display these scrollbars, you can use one of these solutions:

- Use width: 100%  instead of vw: 100

-body: :-webkit-scrollbar {
    width: 0
}

   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 - width, height, top, bottom, right, left
 - pozicioniramo child s obzirom na parent, ovisi kako chlid stavimo position:fixed,absolut,relative, tako ce ovisi % prema cemu se gleda
 - position:FIXED; -30% s obzirom na VEIWPORT
 - position:ABSOLUTE; - 30% closest PARENT koji nije static(POSITION:absolut,fixed,sticy,relative), content+padding
 - position:STATIC, RELATIVE; -30% closest parent BLOK element(displaY:inline;-nije, display:block/inline-block; je) ali samo content, bez padding