ROUTER

1.npm install react-router-dom

2.u index.js:
import {BrowserRouter} from 'react-router-dom'

3.wrapp <App />
<BrowserRouter>
<App />
<BrowserRouter

import {BrowserRouter} from 'react-router-dom'

ReactDOM.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>,
  document.getElementById("root")
);



4.u App.js
import {Route, Switch, NavLink} from 'react-router-dom'
-switch zato jer ako otvorim http://localhost:3000/dog
 pokazuje se i dog i about
-exact (tocno http://localhost:3000/ ide na about

-moze i bez switch jer imamo exact
<div className="App">
      <nav className="App-nav"> 
        <NavLink exact activeClassName="active-link" to="/dog">Dog</NavLink>
        <NavLink exact activeClassName="active-link" to="/">About</NavLink>
        <NavLink exact activeClassName="active-link" to="/cat">cat</NavLink>
        <NavLink exact activeClassName="active-link" to ="/haters">Haters</NavLink>
      </nav>
	<Switch>       
    	<Route exact path='/' component={About}/>
        <Route exact path='/dog' component={Dog}/>
        <Route exact path='/cat' component={Cat}/>
        <Route exact path='/haters' component={Haters}/>
        <Route exact path='/soda' component={Soda}/>
        <Route exact path='/chips' component={Chips}/>
	</Switch>  
    </div>
export default App;
----------------------------------------------------------------------------------
2. PROPS ROUTER

<Route
            exact
            path='/food/:name'
            render={(routeProps) => <Food {...routeProps} />}
          />
Food.js
class Food extends Component {

    render() {
        const name = this.props.match.params.name;
        const url = `https://source.unsplash.com/1600x900/?${name}`;
        return (
            <div className="Food">
                
                <h1>I love to eat {name}</h1>
                <img src={url} alt={name} />
            </div>
---------------------------------------------------------------
3. 404 Not Found - na zadnje mesto u switch, order important
import { Route, Switch } from 'react-router-dom';
<Switch>
        <Route
              exact
              path='/food/:name'
              render={(routeProps) => <Food {...routeProps} />}
            />
        <Route render={() => <h1>Error not found!</h1> } />
</Switch>

----------------------------------------------------------------------
4.simple search form
app.js
<Route exact
               path ='/'
               render = {() => <FoodSearch /> } 
              />      

foodSearch.js
import {Link} from 'react-router-dom'
class FoodSearch extends Component {
    state= {
        query: "" 
    }

    handleChange = (evt) => {
        this.setState({query: evt.target.value });
    }

    render() {
        return (
            <div>
                <h1>Search for a food</h1>
                <input type="text" 
                       placeholder="Search for a food"
                       value={this.state.query}
                       onChange={this.handleChange}
                />
                <Link to={`/food/${this.state.query}`}>GO!</Link>
            </div>
------------------------------------------------------------------------
5.REDIRECT (after submiting form, 404 error

AKO IMA BROJ U NAME, REDIRECT TO '/'
import { Redirect } from "react-router-dom";
class Food extends Component {
  render() {
    const name = this.props.match.params.name;
    const url = `https://source.unsplash.com/1600x900/?${name}`;
    return (
      <div className='Food'>
        {/\d/.test(name) ? (       //chwck if theres a Number in name
          <Redirect to='/' />
        ) : (
          <div>
            <h1>I love to eat {name}</h1>
            <img src={url} alt={name} />
          </div>
        )}
      </div>
    );
  }
}

export default Food;
-------------------------------------------------------------------------------
6.redirect with hispotory.push and button

import React, { Component } from 'react'
import {Link} from 'react-router-dom'

class FoodSearch extends Component {
    state= {
        query: "" 
    }

    handleChange = (evt) => {
        this.setState({query: evt.target.value });
    }
    handleClick = () => {
        //do something
        alert("saved your foof to db!")
        //redirect 
        this.props.history.push(`/food/${this.state.query}`);
    }

    render() {
        return (
            <div>
                <h1>Search for a food</h1>
                <input type="text" 
                       placeholder="Search for a food"
                       value={this.state.query}
                       onChange={this.handleChange}
                />
                <Link to={`/food/${this.state.query}`}>GO!</Link>
                <button onClick={this.handleClick}>Save new food</button>
            </div>
        )
    }
}

export default FoodSearch

app.js
<Route exact
               path ='/'
               render = {(routeProps) => <FoodSearch {...routeProps} /> } 
              />      
------------------------------------------------------------------------------
7.NavBar login -> redirect to food/salmon
withRouter + GOBACK


import React, { Component } from "react";
import { withRouter } from "react-router-dom";
import "./Navbar.css";

class Navbar extends Component {
  constructor(props) {
    super(props);
    this.handleLogin = this.handleLogin.bind(this);
  }
  handleLogin() {
    alert("LOGGED YOU IN!");
    this.props.history.push("/food/salmon");
  }

  render() {
    return (
      <div className='Navbar'>
        <button onClick={this.handleLogin}>Log In</button>
        <button onClick={this.props.history.goBack}>go back</button>
      </div>
    );
  }
}
export default withRouter(Navbar);


