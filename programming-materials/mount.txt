componentDidMount()
	->runs once after constructor and render
        ->when you fetch/load(dohvacam) data always in didmount in react
        ->never setState in constuctor

example1. import quote
import React, { Component } from 'react'
import axios from 'axios'


class Box extends Component {
    state = {
        quote:  "" 
    }
    componentDidMount() {
        //load data
        axios.get("https://api.github.com/zen").then(response => {
            this.setState({ quote: response.data });
        });
      }
    render() {
        return (
            <div>
                <h1>always remember...</h1>
                <p>{this.state.quote}</p>
                      
            </div>  
-------------------------------------------------------
Example 2.
Imamo loader prve tri sek dok se ne pojavi quaote, i onda loader nestane
Prvo contructor, pa prender, pa didMount, pa componentUpdate

componentDidUpdate: primjer za todo gdje se printa Å¡to je bilo prije promjene

import React, { Component } from 'react'
import axios from 'axios'
import './Mount.css'

class Mount extends Component {
    //prvih 3sek loader dok se ne ucita quote
    state = {
        quote:  "" ,
        isLoaded:false 
    }
    componentDidMount() {
        //load data
        axios.get("https://api.github.com/zen").then(response => {
            //namjerno 3s zaostatka u loadanju
            setTimeout(
                function() {
                    this.setState({ quote: response.data,
                                    isLoaded: true  });
                }.bind(this), 3000
            )
            
        });
    }
    componentDidUpdate(prevState, prevProps) {
	console.log("inside omponent did update");
	console.log("prevProps.task");
	console.log("this.props.task");




    }
    render() {
        return (
            <div>
                {this.state.isLoaded ? (
                <div>
                    <h1>always remember...</h1>
                    <p>{this.state.quote}</p>
                </div>
                ) : (
                <div className='loader' />
                )}      
            </div>
        )
    }
}

export default Mount

----------------------------------------
AXIOS
-instal axios
-import axios from 'axios'

state = {
        quote:  "" ,
        isLoaded:false,
	persons: [] 
    }
    componentDidMount() {
        //load data
        axios.get("https://api.github.com/zen").then(response => {
 
                    this.setState({ quote: response.data,
                                    isLoaded: true,
				    persons: response.sata	
  });           

    render()  <ul> {this.state.persons.map(person => <li key={person.id}>{person.name}</li>)} </ul> 