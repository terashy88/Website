CRYPTO APP - App.js, MainRoute.js, CurrencyRoute.js

APP.JS
import React, { useState } from "react";
import "./App.css";
import {BrowserRouter as Router, Route} from 'react-router-dom'
import MainRoute from "./Routes/MainRoute";
import CurrencyRoute from "./Routes/CurrencyRoute";

const App = () => {

  return (
    <div>
      <h1>CryptoLand</h1>
      <Router>
        <Route path="/" exact render= { (props) => <MainRoute/> }  />
        <Route path="/currency/:id"  render= { (props) => <CurrencyRoute/> }  />
      </Router>

    </div>
  );
};

export default App;
------------------------------------------------------------------
MAINROUTE.JS
import React, { useState, useEffect } from "react";
import Axios from "axios";
import {useHistory} from 'react-router-dom'

const MainRoute = () => {
  const [cryptoList, setCryptoList] = useState([]);
  let history=useHistory();

  useEffect(() => {
    Axios.get("https://api.coinlore.net/api/tickers/?start=0&limit=20").then(
      (response) => {
        setCryptoList(response.data["data"]);
        console.log("tu sam", response.data["data"]);
      }
    );
  }, []);

  return (
    <div>
      <div className="cryptoList">
        {cryptoList.map((coin) => {
          return (
            <div onClick={ () => {history.push(`/currency/${coin.id}`)} }>
              {" "}
              <h1>{coin.name}</h1>
              <h1>{coin.symbol}</h1>
              <h1>{coin.price_usd}</h1>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default MainRoute;
--------------------------------------------------------------------
CURRENCYROUTE.JS
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import Axios from "axios";

function CurrencyRoute() {
  let { id } = useParams();
  const [coin, setCoin] = useState({
    name: "",
    symbol: "",
    price_usd: "",
    volume24: 0,
  });

  useEffect(() => {
    Axios.get(`https://api.coinlore.net/api/ticker/?id=${id}`).then(
      (response) => {
        setCoin({
            name: response.data[0].name,
            symbol: response.data[0].symbol,
            price_usd: response.data[0].price_usd,
            volume24: response.data[0].volume24,
          });
      }
    );
  }, []);

  return <div>
          <h1> Name: {coin.name} </h1>
          <h1> Symbol: {coin.symbol} </h1>
          <h1> Price in USD: {coin.price_usd} </h1>
          <h1> Volumne last 24h: {coin.volume24} </h1>
      </div>;
}

export default CurrencyRoute;


