VALIDATE SIMPLE FORM

//form
  const [name, setName] = useState("");              ->set inputs
  const [surname, setSurname] = useState("");

  const [nameErr, setNameErr] = useState("");        ->set errors  
  const [surnameErr, setSurnameErr] = useState("");

  const submitForm = (e) => {
      e.preventDefault();                            -> da se ne refresha cijela forma kada kliknemo na button
      const isValid = formValidation();              -> tu zelimo validirati user input, to make sure you get what you want
                                                     -> boolean, govirt ce da li ce u formi biti error il ne
      if (isValid){
              //send your data to backend            -> ako je forma validna onda ju saljemo na bekend
              neki kod za bekend ide tu!
  
              setName("");
              setSurname("");                        -> nakon sto je forma prosla setamo ju opet u empty string!
      } 
  };

  const formValidation = () => {
     const nameErr={};
     const surnameErr={};                
     let isValid = true;                                            -> set FLAG: first is True, is there is a Error flag is set to False

     if (name.trim().length <5) {                                   -> ako je ime manje od 5 slova 
          name.firstNameTooShortError="First name is too short!"    ->firstNameTooShortError je samo naziv
          isValid="false";                                           -> Flag je sada true sto znaci da forma ima error
     }

     if (name.trim().length > 205) {                                -> ako je ime dulje od 205 slova 
          name.firstNameTooLongError="First name is toolong!"       ->firstNameTooLongError je samo naziv
          isValid="false";                                          -> Flag je sada true sto znaci da forma ima error
     }
      if (surname.includes("123")) {                                ->ako surname ne sadrzi 123 onda erros
          name.surname123="Surname must have 123!"                  ->firstNameTooLongError je samo naziv
          isValid="false";                                           -> Flag je sada true sto znaci da forma ima error
     }

     setNameErr(nameErr);
     setSurnameErr(surnameErr);                                      -> update erros objects!

     return isValid;                                                 -> return Flag! 
  }

return (
      <form onSubmit={submitForm}>
        <label>name</label>
        <input
          type="text"
          onChange={(e) => {
            setName(e.target.value);
          }}
        />
        {Object.keys(nameErr).map( (key) => {
              return <div style={{ color:"red" }}> {nameErr[key]} </div>       ->ispise error za name           
          })}         

        <label>surname</label>
        <input
          type="text"
          onChange={(e) => {
            setSurname(e.target.value);
          }}
        />
        {Object.keys(surnameErr).map( (key) => {
              return <div style={{ color:"red" }}> {surnameErr[key]} </div>       ->ispise error za surname         
          })}    
       
        <button type="submit" onClick={submitForm}>submit</button>
      </form>
-------------------------------------------------------------------------------------------
Example 2.

import React, { useState } from 'react'
function Login() {
    const [user,setUser]=useState("");
    const [password,setPassword]=useState("");        -> ser user, password and errors
    const [userErr,setUserErr]=useState(false);
    const [passErr,setPassErr]=useState(false);

  function submitForm(e)                             -> submit forme na button na prodje validaciju
    {
        if(user.length<3 || password.length<3)       -> errors forme
        {
            alert("type correct values")
        }
        else
        {
            alert("all good :)")
        }

        e.preventDefault()
    }
  function userHandler(e){
        let item=e.target.value;                   -> errors for user, kad se upise username
        if(item.length<3 )
        {
           setUserErr(true)
        }
        else
        {
            setUserErr(false)
        }
        setUser(item)
    }
  function passwordHandler(e){
        let item=e.target.value;
        if(item.length<3 )                        ->errors for password, , kad se upise password
        {
           setPassErr(true)
        }
        else
        {
            setPassErr(false)
        }
        setPassword(item)

    }
    return (
        <div>
            <h1>Login</h1>
           <form onSubmit={submitForm}>

           	<input type="text" placeholder="Enter User Id" onChange={userHandler} />
           	{userErr ? <span>User Not Valid</span> : ""}                                                 -> errors for user

            	<input type="password" placeholder="Enter User Password" onChange={passwordHandler}/>
               {passErr ? <span>Password Not Valid </span> : ""}


            	<button type="submit">Login</button>
           </form>
        </div>
    )
}

export default Login;