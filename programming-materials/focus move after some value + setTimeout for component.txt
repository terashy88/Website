index.js
import React, { useState, useEffect } from "react";
import ReactDOM from "react-dom";

import CreditCardForm from "./CreditCardForm.js";
import "./styles.css";

const rootElement = document.getElementById("root");

function App() {
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    setTimeout(() => setIsLoading(false), 2000);
  }, []);

  return <CreditCardForm isLoading={isLoading} />;
}

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  rootElement
);
----------------------------------------------------------
creditCardForm.js

import React, { useState, useRef, useEffect } from "react";

export default function CreditCardForm(props) {
  const [ccNumber, setCcNumber] = useState("");
  // Method 1: useEffect & ref
  const ccNumberRef = useRef(null);
  useEffect(() => {
    ccNumberRef.current && ccNumberRef.current.focus();
  }, [props.isLoading]);

  useEffect(() => {
    if (ccNumber.length === 16) {
      expiryInputRef.current.focus();
    }
  }, [ccNumber.length]);
  const onChangeCcNumber = (e) => {
    setCcNumber(e.target.value);
  };

  const [expiry, setExpiry] = useState("");
  const expiryInputRef = useRef(null);
  useEffect(() => {
    if (expiry.length === 4) {
      cvvInputRef.current.focus();
    }
  }, [expiry.length]);
  const onChangeExpiry = (e) => {
    setExpiry(e.target.value);
  };

  const [cvv, setCvv] = useState("");
  const cvvInputRef = useRef(null);
  const onChangeCvv = (e) => {
    setCvv(e.target.value);
  };

  if (props.isLoading) {
    return <h1>loading state...</h1>;
  }

  return (
    <div>
      <h1>Credit Card Input</h1>
      <div>
        <label>Credit Card Number</label>
        <input
          type="text"
          maxLength={16}                              -after lenght 16 move to anotger input
          value={ccNumber} 
          onChange={onChangeCcNumber}
          ref={ccNumberRef}
          //Method 2: HTML input autoFocus attribute
          // autoFocus
        />
      </div>
      <div>
        <label>Expiry</label>
        <input
          type="text"
          maxLength={4}                               -after length 4 move to another
          value={expiry}
          onChange={onChangeExpiry}
          ref={expiryInputRef}
        />
      </div>
      <div>
        <label>CVV</label>
        <input
          type="text"
          maxLength={3}
          value={cvv}
          onChange={onChangeCvv}
          ref={cvvInputRef}
        />
      </div>
    </div>
  );
}